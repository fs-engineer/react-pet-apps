{"version":3,"file":"static/js/670.78917e44.chunk.js","mappings":"wNAKe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAACC,GACL,IACUP,EACNO,EADFC,KAAQR,KAGVC,EAAQD,GAAQ,GAClB,IACCS,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,GAAG,CAACR,KAGF,0BACE,uBAAIF,EAAKa,KAAI,SAACC,GAAE,OAAKA,EAAGC,IAAI,IAAEC,KAAK,SAGzC,C,oMC3BMC,EAAYC,+BAEZC,EAAiB,CACrBC,OAAQ,CACNC,QALYH,mCAMZI,SAAU,OAIDC,EAAiB,yCAAG,kHAEVC,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,uBACZE,GACA,KAAD,EAHS,OAAJX,EAAI,yBAIHA,GAAI,wHAId,kBAV6B,mCAYjBiB,EAAe,yCAAG,WAAOC,GAAK,4FAOxC,OAP0CC,EAAI,+BAAG,EAC5CC,EAAU,CACdR,QAAO,kBACFD,EAAeC,QAAM,IACxBM,MAAAA,EACAC,KAAAA,KAEF,EAAD,gBAGoBH,EAAAA,EAAAA,IAAU,GAAD,OAAIP,EAAS,iBAAiBW,GAAS,KAAD,EAAxD,OAAJpB,EAAI,yBAEHA,GAAI,wHAId,gBAhB2B,sCAkBfqB,EAAY,yCAAG,WAAOC,GAAE,8EAKlC,OAJKF,EAAU,CACdR,QAAO,UACFD,EAAeC,SAEpB,EAAD,gBAGoBI,EAAAA,EAAAA,IAAU,GAAD,OAAIP,EAAS,kBAAUa,GAAMF,GAAS,KAAD,EAAvD,OAAJpB,EAAI,yBAEHA,GAAI,wHAId,gBAdwB,sCAgBZuB,EAAa,yCAAG,WAAOD,GAAE,qGAEfN,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,kBAAUa,EAAE,YACxBX,GACA,KAAD,EAHS,OAAJX,EAAI,yBAKHA,GAAI,wHAId,gBAXyB,sCAabH,EAAgB,yCAAG,WAAOyB,GAAE,qGAElBN,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,kBAAUa,EAAE,YACxBX,GACA,KAAD,EAHS,OAAJX,EAAI,yBAKHA,GAAI,wHAId,gBAX4B,qC","sources":["components/MoviesCollection/MovieCast/MovieCast.js","helpers/moviesApi.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCastById } from \"../../../helpers/moviesApi\";\n\nexport default function MovieCast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    getMovieCastById(movieId)\n      .then((res) => {\n        const {\n          data: { cast },\n        } = res;\n\n        setCast(cast || []);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <p>{cast.map((el) => el.name).join(\", \")}</p>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst api_key = process.env.REACT_APP_THEMOVIEDB_API_KEY;\nconst movie_url = process.env.REACT_APP_THEMOVIEDB_URL;\n\nconst initialOptions = {\n  params: {\n    api_key,\n    language: \"en\",\n  },\n};\n\nexport const getMoviesTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/trending/movie/day`,\n      initialOptions\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMoviesByName = async (query, page = 1) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n      query,\n      page,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/search/movie`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async (id) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/movie/${id}`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviewById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/reviews`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCastById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/credits`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MovieCast","useState","cast","setCast","movieId","useParams","useEffect","getMovieCastById","then","res","data","catch","err","console","log","map","el","name","join","movie_url","process","initialOptions","params","api_key","language","getMoviesTrending","axios","getMoviesByName","query","page","options","getMovieById","id","getReviewById"],"sourceRoot":""}