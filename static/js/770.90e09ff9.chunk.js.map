{"version":3,"file":"static/js/770.90e09ff9.chunk.js","mappings":"wNAIe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAchC,OAZAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAEGC,MAAK,SAACC,GACL,IACQC,EADSD,EAATE,KACAD,QAERL,EAAcK,EAChB,IACCE,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAIF,EAAI,GACpC,GAAG,KAEI,SAAC,IAAU,CAACG,OAAQZ,GAC7B,C,gHClBaa,EAAOC,EAAAA,EAAAA,GAAS,2GAMhBC,EAAWD,EAAAA,EAAAA,GAAS,mIAQpBE,EAAUF,EAAAA,EAAAA,IAAU,+C,oBCXlB,SAASG,EAAW,GAAa,IAAXL,EAAM,EAANA,OAC3BM,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,EAAc,SAACC,GACnB,MAAoB,uBAAbH,EAAiC,iBAAaG,GAAE,UAAQA,EACjE,EAEA,OACE,SAACR,EAAI,UACFD,GACCA,EAAOU,KAAI,YAA+C,IAA5CD,EAAE,EAAFA,GAAIE,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YACrC,OACE,SAACV,EAAQ,WACP,UAAC,KAAI,CACHW,GAAIN,EAAYC,GAChBM,MAAO,CAAEC,KAAMV,GACfW,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAAY,UAEnDN,GACC,SAACT,EAAO,CAACgB,KAAKC,EAAAA,EAAAA,GAAWR,MAEzB,uBAAG,eAEL,0BACE,uBAAG,mBAAkB,IAAEF,MAEzB,wBAAKC,QAdMH,EAkBnB,KAGR,C,uDCtCO,IAAMY,EAAa,SAACC,GACzB,MAAM,kCAAN,OAAyCA,EAC3C,C,oMCCMC,EAAYC,+BAEZC,EAAiB,CACrBC,OAAQ,CACNC,QALYH,mCAMZI,SAAU,OAIDC,EAAiB,yCAAG,kHAEVC,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,uBACZE,GACA,KAAD,EAHS,OAAJ9B,EAAI,yBAIHA,GAAI,wHAId,kBAV6B,mCAYjBoC,EAAe,yCAAG,WAAOC,GAAK,4FAOxC,OAP0CC,EAAI,+BAAG,EAC5CC,EAAU,CACdR,QAAO,kBACFD,EAAeC,QAAM,IACxBM,MAAAA,EACAC,KAAAA,KAEF,EAAD,gBAGoBH,EAAAA,EAAAA,IAAU,GAAD,OAAIP,EAAS,iBAAiBW,GAAS,KAAD,EAAxD,OAAJvC,EAAI,yBAEHA,GAAI,wHAId,gBAhB2B,sCAkBfwC,EAAY,yCAAG,WAAO1B,GAAE,8EAKlC,OAJKyB,EAAU,CACdR,QAAO,UACFD,EAAeC,SAEpB,EAAD,gBAGoBI,EAAAA,EAAAA,IAAU,GAAD,OAAIP,EAAS,kBAAUd,GAAMyB,GAAS,KAAD,EAAvD,OAAJvC,EAAI,yBAEHA,GAAI,wHAId,gBAdwB,sCAgBZyC,EAAa,yCAAG,WAAO3B,GAAE,qGAEfqB,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,kBAAUd,EAAE,YACxBgB,GACA,KAAD,EAHS,OAAJ9B,EAAI,yBAKHA,GAAI,wHAId,gBAXyB,sCAab0C,EAAgB,yCAAG,WAAO5B,GAAE,qGAElBqB,EAAAA,EAAAA,IAAU,GAAD,OACvBP,EAAS,kBAAUd,EAAE,YACxBgB,GACA,KAAD,EAHS,OAAJ9B,EAAI,yBAKHA,GAAI,wHAId,gBAX4B,qC","sources":["Pages/MoviesTrending.js","components/MoviesCollection/MoviesList/MoviesList.styled.js","components/MoviesCollection/MoviesList/MoviesList.js","helpers/makeImgUrl.js","helpers/moviesApi.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MoviesList } from \"../components/MoviesCollection/MoviesList\";\nimport * as movieApi from \"../helpers/moviesApi\";\n\nexport default function MoviesTrending() {\n  const [moviesData, setMoviesData] = useState([]);\n\n  useEffect(() => {\n    movieApi\n      .getMoviesTrending()\n      .then((res) => {\n        const { data } = res;\n        const { results } = data;\n\n        setMoviesData(results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return <MoviesList movies={moviesData} />;\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  padding: 40px 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  cursor: pointer;\n`;\n\nexport const ItemImg = styled.img`\n  /* width: 220px; */\n`;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ItemImg, List, ListItem } from \"./MoviesList.styled\";\nimport { makeImgUrl } from \"../../../helpers/makeImgUrl\";\n\nexport default function MoviesList({ movies }) {\n  const { pathname } = useLocation();\n\n  const getLinkPath = (id) => {\n    return pathname === \"/movies-collection\" ? `movies/${id}` : `${id}`;\n  };\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, release_date, title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link\n                to={getLinkPath(id)}\n                state={{ from: pathname }}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                {poster_path ? (\n                  <ItemImg src={makeImgUrl(poster_path)} />\n                ) : (\n                  <p>No images</p>\n                )}\n                <p>\n                  <b>Release date: </b> {release_date}\n                </p>\n                <h2>{title}</h2>\n              </Link>\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n}\n","export const makeImgUrl = (imgId) => {\n  return `https://image.tmdb.org/t/p/w342${imgId}`;\n};\n","import axios from \"axios\";\n\nconst api_key = process.env.REACT_APP_THEMOVIEDB_API_KEY;\nconst movie_url = process.env.REACT_APP_THEMOVIEDB_URL;\n\nconst initialOptions = {\n  params: {\n    api_key,\n    language: \"en\",\n  },\n};\n\nexport const getMoviesTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/trending/movie/day`,\n      initialOptions\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMoviesByName = async (query, page = 1) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n      query,\n      page,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/search/movie`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async (id) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/movie/${id}`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviewById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/reviews`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCastById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/credits`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MoviesTrending","useState","moviesData","setMoviesData","useEffect","movieApi","then","res","results","data","catch","err","console","log","movies","List","styled","ListItem","ItemImg","MoviesList","pathname","useLocation","getLinkPath","id","map","release_date","title","poster_path","to","state","from","style","textDecoration","color","src","makeImgUrl","imgId","movie_url","process","initialOptions","params","api_key","language","getMoviesTrending","axios","getMoviesByName","query","page","options","getMovieById","getReviewById","getMovieCastById"],"sourceRoot":""}