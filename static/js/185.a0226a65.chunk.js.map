{"version":3,"file":"static/js/185.a0226a65.chunk.js","mappings":"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","sources":["components/MoviesCollection/MovieSearchBar/MovieSearchBar.js","Pages/MoviesCollection.js","components/Buttons/Button/Button.styled.js","components/Buttons/Button/Button.js","components/InputFields/FilterByName.styled.js","components/InputFields/FilterByName.js","components/MoviesCollection/MoviesList/MoviesList.styled.js","components/MoviesCollection/MoviesList/MoviesList.js","components/Section/Section.styled.js","components/Section/Section.js","helpers/makeImgUrl.js","helpers/moviesApi.js"],"sourcesContent":["import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { FilterByName } from \"../../InputFields\";\nimport { Section } from \"../../Section\";\nimport { Button } from \"../../Buttons/Button\";\n\nexport default function MovieSearchBar({ onClick }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") || \"\";\n\n  const changeSearchParams = (value) => {\n    setSearchParams(value !== \"\" ? { query: value } : {});\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    onClick();\n  };\n\n  return (\n    <Section direction={\"row\"}>\n      <form onSubmit={submitForm}>\n        <FilterByName onChange={changeSearchParams} filter={query} />\n        <Button\n          disabled={!query}\n          type=\"submit\"\n          text=\"Search\"\n          padding={5}\n          textColor=\"blue\"\n        />\n      </form>\n    </Section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MovieSearchBar } from \"../components/MoviesCollection/MovieSearchBar\";\nimport { MoviesList } from \"../components/MoviesCollection/MoviesList\";\nimport * as moviesApi from \"../helpers/moviesApi\";\n\nexport default function MoviesCollection() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(\"query\");\n\n  const getMovies = () => {\n    moviesApi\n      .getMoviesByName(query, 1)\n      .then((res) => {\n        const moviesData = res?.data?.results;\n        setMovies(moviesData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <MovieSearchBar onClick={getMovies} />\n      <MoviesList movies={movies} />\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const StyledBtn = styled.button`\n  padding: ${(props) => props.padding || 10}px;\n  border-radius: 5px;\n  border: 1px solid blue;\n  color: ${({ color }) => color};\n  cursor: pointer;\n  // transition: all 2s easy-in;\n  transition: background 0.2s ease-in-out;\n\n  :hover {\n    background-color: #687def95;\n  }\n`;\n","import React from \"react\";\nimport { StyledBtn } from \"./Button.styled\";\n\nconst Button = ({\n  text,\n  textColor = \"#000\",\n  type,\n  onClick,\n  id,\n  padding,\n  disabled,\n}) => (\n  <StyledBtn\n    disabled={disabled}\n    padding={padding}\n    color={textColor}\n    type={type}\n    onClick={onClick}\n    data-id={id}\n  >\n    {text}\n  </StyledBtn>\n);\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Filter = styled.input`\n  padding: 5px;\n  margin-right: 15px;\n  border-radius: 5px;\n  border: 1px solid blue;\n`;\n","import React from \"react\";\nimport { Filter } from \"./FilterByName.styled\";\n\nconst FilterByName = ({ filter, onChange }) => (\n  <Filter\n    onChange={(e) => onChange(e.target.value)}\n    type=\"text\"\n    name=\"filter\"\n    value={filter}\n  />\n);\n\nexport default FilterByName;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  padding: 40px 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  cursor: pointer;\n`;\n\nexport const ItemImg = styled.img`\n  /* width: 220px; */\n`;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ItemImg, List, ListItem } from \"./MoviesList.styled\";\nimport { makeImgUrl } from \"../../../helpers/makeImgUrl\";\n\nexport default function MoviesList({ movies }) {\n  const { pathname } = useLocation();\n\n  const getLinkPath = (id) => {\n    return pathname === \"/movies-collection\" ? `movies/${id}` : `${id}`;\n  };\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, release_date, title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link\n                to={getLinkPath(id)}\n                state={{ from: pathname }}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                {poster_path ? (\n                  <ItemImg src={makeImgUrl(poster_path)} />\n                ) : (\n                  <p>No images</p>\n                )}\n                <p>\n                  <b>Release date: </b> {release_date}\n                </p>\n                <h2>{title}</h2>\n              </Link>\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  display: flex;\n  flex-direction: ${(props) => props.direction || \"column\"};\n  align-items: flex-start;\n  padding: 15px;\n`;\n","import { SectionWrapper } from \"./Section.styled\";\n\nconst Section = ({ children, title, direction }) => (\n  <SectionWrapper direction={direction}>\n    {title && <h2>{title}</h2>}\n    {children}\n  </SectionWrapper>\n);\n\nexport default Section;\n","export const makeImgUrl = (imgId) => {\n  return `https://image.tmdb.org/t/p/w342${imgId}`;\n};\n","import axios from \"axios\";\n\nconst api_key = process.env.REACT_APP_THEMOVIEDB_API_KEY;\nconst movie_url = process.env.REACT_APP_THEMOVIEDB_URL;\n\nconst initialOptions = {\n  params: {\n    api_key,\n    language: \"en\",\n  },\n};\n\nexport const getMoviesTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/trending/movie/day`,\n      initialOptions\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMoviesByName = async (query, page = 1) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n      query,\n      page,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/search/movie`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async (id) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/movie/${id}`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviewById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/reviews`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCastById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/credits`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MovieSearchBar","onClick","useSearchParams","searchParams","setSearchParams","query","get","Section","direction","onSubmit","e","preventDefault","onChange","value","filter","Button","disabled","type","text","padding","textColor","MoviesCollection","useState","movies","setMovies","moviesApi","then","res","moviesData","data","results","catch","err","console","log","MoviesList","StyledBtn","styled","props","color","id","Filter","target","name","List","ListItem","ItemImg","pathname","useLocation","getLinkPath","map","release_date","title","poster_path","to","state","from","style","textDecoration","src","makeImgUrl","SectionWrapper","children","imgId","movie_url","process","initialOptions","params","api_key","language","getMoviesTrending","axios","getMoviesByName","page","options","getMovieById","getReviewById","getMovieCastById"],"sourceRoot":""}