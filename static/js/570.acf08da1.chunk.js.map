{"version":3,"file":"static/js/570.acf08da1.chunk.js","mappings":"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","sources":["components/Phonebook/ContactsList/ContactsList.styled.js","redux/phonebook/selectors.js","components/Phonebook/ContactsList/ContactsList.js","components/Phonebook/SearchForm/SearchForm.styled.js","../node_modules/nanoid/index.browser.js","components/Phonebook/SearchForm/SearchForm.js","components/Phonebook/Title/Title.js","Pages/Phonebook.js","components/Buttons/Button/Button.styled.js","components/Buttons/Button/Button.js","components/InputFields/FilterByName.styled.js","components/InputFields/FilterByName.js","components/LoadingSpinner/LoadingSpinner.js","components/Section/Section.styled.js","components/Section/Section.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const ItemText = styled.p`\n  margin-right: 15px;\n`;\n","export const selectContacts = (state) => state.phonebook.items;\n\nexport const selectIsLoading = (state) => state.phonebook.isLoading;\n\nexport const selectError = (state) => state.phonebook.error;\n","import { Button } from \"../../Buttons/Button\";\nimport { List, ListItem, ItemText } from \"./ContactsList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../../redux/phonebook/operations\";\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from \"../../../redux/phonebook/selectors\";\nimport { LoadingSpinner } from \"../../LoadingSpinner\";\n\nconst ContactsList = ({ filter }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const filteredContactsByName = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  console.log(error);\n\n  return (\n    <>\n      {isLoading ? <LoadingSpinner /> : null}\n      <List>\n        {Array.isArray(filteredContactsByName) &&\n          filteredContactsByName.length > 0 &&\n          filteredContactsByName.map(({ name, number, id }) => (\n            <ListItem key={id}>\n              <ItemText>\n                {name}: <span>{number}</span>\n              </ItemText>\n              <Button\n                text=\"Delete\"\n                onClick={(e) => dispatch(deleteContact(e.target.dataset.id))}\n                id={id}\n              />\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 10px 10px 10px 0;\n`;\n\nexport const NameInput = styled.input`\n  padding: 5px;\n  margin-right: 15px;\n  border-radius: 5px;\n  border: 1px solid blue;\n`;\n\nexport const PhoneInput = styled.input`\n  padding: 5px;\n  margin-right: 15px;\n  border-radius: 5px;\n  border: 1px solid blue;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React, { useState } from \"react\";\nimport { Form, NameInput, PhoneInput } from \"./SearchForm.styled\";\nimport { Button } from \"../../Buttons/Button\";\nimport { toast } from \"react-toastify\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"../../../redux/phonebook/selectors\";\nimport { addContact } from \"../../../redux/phonebook/operations\";\n\nconst SearchForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n    const isExists = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExists) {\n      toast.error(`Contact ${name} is already exists`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    dispatch(addContact(newContact));\n\n    toast.info(`Contact ${name} added`);\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <PhoneInput\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={(e) => setNumber(e.target.value)}\n        required\n      />\n      <Button type=\"submit\" text=\"Save contact\" />\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nexport default Title;\n","import { useSearchParams } from \"react-router-dom\";\nimport { ContactsList } from \"../components/Phonebook/ContactsList\";\nimport { FilterByName } from \"../components/InputFields\";\nimport { SearchForm } from \"../components/Phonebook/SearchForm\";\nimport { Section } from \"../components/Section\";\nimport { Title } from \"../components/Phonebook/Title\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../redux/phonebook/operations\";\n\nconst Phonebook = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get(\"filter\") || \"\";\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const changeFilter = (value) => {\n    setSearchParams(value !== \"\" ? { filter: value } : {});\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <SearchForm />\n        <Title title=\"Contacts\" />\n        <FilterByName onChange={changeFilter} filter={filter} />\n        <ContactsList filter={filter} />\n      </Section>\n    </>\n  );\n};\n\nexport default Phonebook;\n","import styled from \"@emotion/styled\";\n\nexport const StyledBtn = styled.button`\n  padding: ${(props) => props.padding || 10}px;\n  border-radius: 5px;\n  border: 1px solid blue;\n  color: ${({ color }) => color};\n  cursor: pointer;\n  // transition: all 2s easy-in;\n  transition: background 0.2s ease-in-out;\n\n  :hover {\n    background-color: #687def95;\n  }\n`;\n","import React from \"react\";\nimport { StyledBtn } from \"./Button.styled\";\n\nconst Button = ({\n  text,\n  textColor = \"#000\",\n  type,\n  onClick,\n  id,\n  padding,\n  disabled,\n}) => (\n  <StyledBtn\n    disabled={disabled}\n    padding={padding}\n    color={textColor}\n    type={type}\n    onClick={onClick}\n    data-id={id}\n  >\n    {text}\n  </StyledBtn>\n);\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Filter = styled.input`\n  padding: 5px;\n  margin-right: 15px;\n  border-radius: 5px;\n  border: 1px solid blue;\n`;\n","import React from \"react\";\nimport { Filter } from \"./FilterByName.styled\";\n\nconst FilterByName = ({ filter, onChange }) => (\n  <Filter\n    onChange={(e) => onChange(e.target.value)}\n    type=\"text\"\n    name=\"filter\"\n    value={filter}\n  />\n);\n\nexport default FilterByName;\n","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"loading-spinner\"></div>\n  </div>\n);\n\nexport default LoadingSpinner;\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  display: flex;\n  flex-direction: ${(props) => props.direction || \"column\"};\n  align-items: flex-start;\n  padding: 15px;\n`;\n","import { SectionWrapper } from \"./Section.styled\";\n\nconst Section = ({ children, title, direction }) => (\n  <SectionWrapper direction={direction}>\n    {title && <h2>{title}</h2>}\n    {children}\n  </SectionWrapper>\n);\n\nexport default Section;\n"],"names":["List","styled","ListItem","ItemText","selectContacts","state","phonebook","items","selectIsLoading","isLoading","selectError","error","filter","dispatch","useDispatch","contacts","useSelector","filteredContactsByName","contact","name","toLowerCase","includes","console","log","LoadingSpinner","Array","isArray","length","map","number","id","Button","text","onClick","e","deleteContact","target","dataset","Form","NameInput","PhoneInput","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","useState","setName","setNumber","onSubmit","preventDefault","form","value","find","toast","newContact","addContact","reset","type","onChange","pattern","title","required","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchContacts","Section","StyledBtn","props","padding","color","textColor","disabled","Filter","className","SectionWrapper","direction","children"],"sourceRoot":""}