{"version":3,"file":"static/js/185.3d61f7c2.chunk.js","mappings":"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","sources":["components/MoviesCollection/MovieSearchBar/MovieSearchBar.js","Pages/MoviesCollection.js","components/MoviesCollection/MoviesList/MoviesList.styled.js","components/MoviesCollection/MoviesList/MoviesList.js","components/Section/Section.styled.js","components/Section/Section.js","helpers/makeImgUrl.js","helpers/moviesApi.js"],"sourcesContent":["import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { FilterByName } from \"../../InputFields\";\nimport { Section } from \"../../Section\";\nimport { Button } from \"../../Buttons/Button\";\n\nexport default function MovieSearchBar({ onClick }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") || \"\";\n\n  const changeSearchParams = (value) => {\n    setSearchParams(value !== \"\" ? { query: value } : {});\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    onClick();\n  };\n\n  return (\n    <Section direction={\"row\"}>\n      <form onSubmit={submitForm}>\n        <FilterByName onChange={changeSearchParams} filter={query} />\n        <Button\n          disabled={!query}\n          type=\"submit\"\n          text=\"Search\"\n          padding={5}\n          textColor=\"blue\"\n        />\n      </form>\n    </Section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MovieSearchBar } from \"../components/MoviesCollection/MovieSearchBar\";\nimport { MoviesList } from \"../components/MoviesCollection/MoviesList\";\nimport * as moviesApi from \"../helpers/moviesApi\";\n\nexport default function MoviesCollection() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(\"query\");\n\n  const getMovies = () => {\n    moviesApi\n      .getMoviesByName(query, 1)\n      .then((res) => {\n        const moviesData = res?.data?.results;\n        setMovies(moviesData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <MovieSearchBar onClick={getMovies} />\n      <MoviesList movies={movies} />\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  padding: 40px 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  cursor: pointer;\n`;\n\nexport const ItemImg = styled.img`\n  /* width: 220px; */\n`;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ItemImg, List, ListItem } from \"./MoviesList.styled\";\nimport { makeImgUrl } from \"../../../helpers/makeImgUrl\";\n\nexport default function MoviesList({ movies }) {\n  const { pathname } = useLocation();\n\n  const getLinkPath = (id) => {\n    return pathname === \"/movies-collection\" ? `movies/${id}` : `${id}`;\n  };\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, release_date, title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link\n                to={getLinkPath(id)}\n                state={{ from: pathname }}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                {poster_path ? (\n                  <ItemImg src={makeImgUrl(poster_path)} />\n                ) : (\n                  <p>No images</p>\n                )}\n                <p>\n                  <b>Release date: </b> {release_date}\n                </p>\n                <h2>{title}</h2>\n              </Link>\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  display: flex;\n  flex-direction: ${(props) => props.direction || \"column\"};\n  align-items: flex-start;\n  padding: 15px;\n`;\n","import { SectionWrapper } from \"./Section.styled\";\n\nconst Section = ({ children, title, direction }) => (\n  <SectionWrapper direction={direction}>\n    {title && <h2>{title}</h2>}\n    {children}\n  </SectionWrapper>\n);\n\nexport default Section;\n","export const makeImgUrl = (imgId) => {\n  return `https://image.tmdb.org/t/p/w342${imgId}`;\n};\n","import axios from \"axios\";\n\nconst api_key = process.env.REACT_APP_THEMOVIEDB_API_KEY;\nconst movie_url = process.env.REACT_APP_THEMOVIEDB_URL;\n\nconst initialOptions = {\n  params: {\n    api_key,\n    language: \"en\",\n  },\n};\n\nexport const getMoviesTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/trending/movie/day`,\n      initialOptions\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMoviesByName = async (query, page = 1) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n      query,\n      page,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/search/movie`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async (id) => {\n  const options = {\n    params: {\n      ...initialOptions.params,\n    },\n  };\n\n  try {\n    const data = await axios.get(`${movie_url}/movie/${id}`, options);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviewById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/reviews`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCastById = async (id) => {\n  try {\n    const data = await axios.get(\n      `${movie_url}/movie/${id}/credits`,\n      initialOptions\n    );\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MovieSearchBar","onClick","useSearchParams","searchParams","setSearchParams","query","get","Section","direction","onSubmit","e","preventDefault","onChange","value","filter","Button","disabled","type","text","padding","textColor","MoviesCollection","useState","movies","setMovies","moviesApi","then","res","moviesData","data","results","catch","err","console","log","MoviesList","List","styled","ListItem","ItemImg","pathname","useLocation","getLinkPath","id","map","release_date","title","poster_path","to","state","from","style","textDecoration","color","src","makeImgUrl","SectionWrapper","props","children","imgId","movie_url","process","initialOptions","params","api_key","language","getMoviesTrending","axios","getMoviesByName","page","options","getMovieById","getReviewById","getMovieCastById"],"sourceRoot":""}